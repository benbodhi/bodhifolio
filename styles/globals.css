@layer theme, base, components, utilities;
@import "tailwindcss/theme.css" layer(theme);
@import "tailwindcss/preflight.css" layer(base);
@import "tailwindcss/utilities.css" layer(utilities);

/*============================================================================
  TAILWIND CONFIGURATION
  
  Default Breakpoints:
  sm	40rem (640px)   @media (width >= 40rem) { ... }
  md	48rem (768px)	  @media (width >= 48rem) { ... }
  lg	64rem (1024px)	@media (width >= 64rem) { ... }
  xl	80rem (1280px)	@media (width >= 80rem) { ... }
  2xl	96rem (1536px)	@media (width >= 96rem) { ... }

  Grid Layout:
  0+    = 1 col   no prefix
  768+  = 2 cols  md
  1280+ = 3 cols  xl
  1920+ = 4 cols  3xl (custom breakpoint)
  2160+ = 5 cols  4xl (custom breakpoint)
============================================================================*/

/*============================================================================
  THEME CONFIGURATION
============================================================================*/
@theme {
  --breakpoint-3xl: 120rem;   /* (1920px) @media (width >= 120rem) { ... } */
  --breakpoint-4xl: 135rem;   /* (2160px) @media (width >= 135rem) { ... } */
}

/*============================================================================
  CUSTOM PROPERTIES
============================================================================*/
@property --angle {
  syntax: '<angle>';
  initial-value: 0deg;
  inherits: false;
}

@property --gradient-angle {
  syntax: '<angle>';
  initial-value: 135deg;
  inherits: false;
}

@property --gradient-direction {
  syntax: '<angle> | to <position>';
  initial-value: to right bottom;
  inherits: false;
}

/*============================================================================
  BASE STYLES
============================================================================*/
@layer base {
  /* Theme Variables - Light Mode */
  :root {
    --background: 0 0% 100%;
    --foreground: 240 10% 3.9%;
    --content: 240 10% 20%;
    
    --card: 0 0% 100%;
    --card-foreground: 240 10% 3.9%;
    
    --popover: 0 0% 100%;
    --popover-foreground: 240 10% 3.9%;
    
    --primary: 240 5.9% 10%;
    --primary-foreground: 0 0% 98%;
    
    --secondary: 240 4.8% 95.9%;
    --secondary-foreground: 240 5.9% 10%;
    
    --muted: 240 4.8% 95.9%;
    --muted-foreground: 240 3.8% 46.1%;
    
    --accent: 240 4.8% 95.9%;
    --accent-foreground: 240 5.9% 10%;
    
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    
    --border: 240 5.9% 90%;
    --input: 240 5.9% 90%;
    --ring: 240 5.9% 10%;
    
    --radius: 0.5rem;
    --radius-sm: 0.3rem;
    --radius-md: 0.5rem;
    --radius-lg: 0.7rem;
  }

  /* Theme Variables - Dark Mode */
  .dark {
    --background: 180 5% 8%;
    --foreground: 0 0% 98%;
    --content: 0deg 0% 79%;
    
    --card: 180 4% 10%;
    --card-foreground: 0 0% 98%;
    
    --popover: 180 4% 10%;
    --popover-foreground: 0 0% 98%;
    
    --primary: 0 0% 98%;
    --primary-foreground: 240 5.9% 10%;
    
    --secondary: 240 3.7% 15.9%;
    --secondary-foreground: 0 0% 98%;
    
    --muted: 240 3.7% 15.9%;
    --muted-foreground: 240 5% 64.9%;
    
    --accent: 240 3.7% 15.9%;
    --accent-foreground: 0 0% 98%;
    
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    
    --border: 180 3% 13%;
    --input: 180 3% 13%;
    --ring: 240 4.9% 83.9%;
  }

  /* Global Element Styles */
  * {
    border-color: hsl(var(--border));
  }

  html {
    /* Improve scrolling performance */
    scroll-behavior: smooth;
    -webkit-overflow-scrolling: touch;
    height: 100%;
  }

  body {
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
    min-height: 100%;
    /* Prevent content shift during scrolling */
    overflow-y: scroll;
    /* Improve rendering performance */
    will-change: scroll-position;
    /* Force hardware acceleration */
    transform: translateZ(0);
    backface-visibility: hidden;
    perspective: 1000px;
    /* Prevent gray overlay during fast scrolling */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  /* Interactive Element Styles */
  a, button, [role="button"], 
  input[type="button"], input[type="submit"], input[type="reset"],
  .cursor-pointer {
    cursor: pointer !important;
    -webkit-tap-highlight-color: transparent;
    touch-action: manipulation;
  }
  
  a *, button *, [role="button"] *, 
  input[type="button"] *, input[type="submit"] *, input[type="reset"] *,
  .cursor-pointer * {
    cursor: pointer !important;
  }
}

/* Improve rendering for all elements */
.render-boost {
  transform: translateZ(0);
  backface-visibility: hidden;
  perspective: 1000px;
}

/*============================================================================
  UTILITY CLASSES
============================================================================*/
@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
  
  .touch-action-manipulation {
    touch-action: manipulation;
  }
}

/*============================================================================
  COMPONENT STYLES
============================================================================*/
@layer components {
  /* Text Styles */
  .title-text {
    color: hsl(var(--foreground));
    font-weight: 700;
  }

  .content-text {
    color: hsl(var(--content));
    font-size: 1rem;
  }

  /* Link Styles */
  .color-link {
    position: relative;
    transition: color 1000ms;
    cursor: pointer;
    animation: colorCycle 15s infinite linear;
  }

  /* Button Styles */
  .project-card-button {
    display: inline-flex;
    align-items: center;
    padding: 0.75rem 1.5rem;
    font-size: 1rem;
    font-weight: 500;
    border-radius: 1rem;
    transition: all 0s;
    cursor: pointer;
    -webkit-tap-highlight-color: transparent;
    touch-action: manipulation;
    border: 2px solid hsl(var(--border));
    background-color: hsl(var(--background));
  }

  .project-card-button:active {
    transform: scale(0.95);
  }

  .project-card-button:hover {
    border: 2px solid transparent;
    background-origin: border-box;
    background-clip: padding-box, border-box;
    background-image: 
      linear-gradient(hsl(var(--background)), hsl(var(--background))),
      linear-gradient(var(--gradient-angle), #00ffcc, #9933ff, #ff00ff);
    animation: gradientRotate 2s linear forwards;
  }

  .dark .project-card-button:hover {
    border: 2px solid transparent;
    background-origin: border-box;
    background-clip: padding-box, border-box;
    background-image: 
      linear-gradient(hsl(var(--background)), hsl(var(--background))),
      linear-gradient(var(--gradient-angle), #00ffcc, #9933ff, #ff00ff);
    animation: gradientRotate 2s linear forwards;
  }

  /* Animation Styles */
  .bomb-roll {
    animation: bombRoll 20s infinite ease-in-out;
  }
}

/*============================================================================
  CURSOR CONSISTENCY
============================================================================*/
/* Ensure all buttons and interactive elements have consistent cursor */
button, 
a,
.project-button, 
.project-card-button,
.gradient-border,
.color-link,
[role="button"],
input[type="button"],
input[type="submit"],
input[type="reset"] {
  cursor: pointer !important;
}

/* Also ensure children of buttons maintain the pointer cursor */
button *, 
a *,
.project-button *, 
.project-card-button *,
.gradient-border *,
[role="button"] * {
  cursor: pointer !important;
}

/*============================================================================
  ANIMATIONS
============================================================================*/
/* Gradient Rotation Animation */
@keyframes gradientRotate {
  0% {
    --gradient-angle: 135deg;
  }
  100% {
    --gradient-angle: 225deg;
  }
}

/* Color Cycle Animations */
@keyframes colorCycle {
  0%, 100% { color: #00ffcc; }
  5% { color: #00e0e0; }
  10% { color: #00a0ff; }
  15% { color: #5580ff; }
  20% { color: #8040ff; }
  25% { color: #9933ff; }
  30% { color: #bb10ff; }
  35% { color: #dd00ff; }
  40% { color: #ff00ff; }
  45% { color: #ff00bb; }
  50% { color: #ff3377; }
  55% { color: #ff3377; }
  60% { color: #ff00bb; }
  65% { color: #ff00ff; }
  70% { color: #dd00ff; }
  75% { color: #bb10ff; }
  80% { color: #9933ff; }
  85% { color: #8040ff; }
  90% { color: #5580ff; }
  95% { color: #00a0ff; }
}

@keyframes colorCycleLight {
  /* Light mode: content is 240 10% 20% (dark grayish blue) */
  /* Dark mode: content is 0deg 0% 79% (light gray) */
  /* We'll create subtle tints by mixing the colors with the content color */
  0%, 100% { color: hsl(160, 70%, 40%); }
  5% { color: hsl(180, 60%, 40%); }
  10% { color: hsl(210, 60%, 50%); }
  15% { color: hsl(230, 50%, 55%); }
  20% { color: hsl(250, 50%, 50%); }
  25% { color: hsl(270, 50%, 45%); }
  30% { color: hsl(280, 45%, 45%); }
  35% { color: hsl(290, 45%, 45%); }
  40% { color: hsl(300, 45%, 45%); }
  45% { color: hsl(320, 45%, 45%); }
  50% { color: hsl(340, 45%, 50%); }
  55% { color: hsl(340, 45%, 50%); }
  60% { color: hsl(320, 45%, 45%); }
  65% { color: hsl(300, 45%, 45%); }
  70% { color: hsl(290, 45%, 45%); }
  75% { color: hsl(280, 45%, 45%); }
  80% { color: hsl(270, 50%, 45%); }
  85% { color: hsl(250, 50%, 50%); }
  90% { color: hsl(230, 50%, 55%); }
  95% { color: hsl(210, 60%, 50%); }
}

@keyframes colorCycleLightDark {
  /* Dark mode version with colors that blend with 0deg 0% 79% */
  0%, 100% { color: hsl(160, 40%, 70%); }
  5% { color: hsl(180, 35%, 70%); }
  10% { color: hsl(210, 35%, 70%); }
  15% { color: hsl(230, 30%, 70%); }
  20% { color: hsl(250, 30%, 70%); }
  25% { color: hsl(270, 30%, 70%); }
  30% { color: hsl(280, 30%, 70%); }
  35% { color: hsl(290, 30%, 70%); }
  40% { color: hsl(300, 30%, 70%); }
  45% { color: hsl(320, 30%, 70%); }
  50% { color: hsl(340, 30%, 70%); }
  55% { color: hsl(340, 30%, 70%); }
  60% { color: hsl(320, 30%, 70%); }
  65% { color: hsl(300, 30%, 70%); }
  70% { color: hsl(290, 30%, 70%); }
  75% { color: hsl(280, 30%, 70%); }
  80% { color: hsl(270, 30%, 70%); }
  85% { color: hsl(250, 30%, 70%); }
  90% { color: hsl(230, 30%, 70%); }
  95% { color: hsl(210, 35%, 70%); }
}

@keyframes rotate {
  0% {
    --angle: 0deg;
  }
  100% {
    --angle: 360deg;
  }
}

@keyframes bombRoll {
  0% {
    transform: translateX(0) rotate(0deg);
  }
  20% {
    transform: translateX(calc(50vw + 55px)) rotate(720deg);
  }
  25% {
    transform: translateX(calc(50vw + 55px)) rotate(720deg);
    opacity: 0;
  }
  30% {
    transform: translateX(calc(-50vw - 55px)) rotate(720deg);
    opacity: 0;
  }
  35% {
    transform: translateX(calc(-50vw - 55px)) rotate(720deg);
  }
  55% {
    transform: translateX(0) rotate(1440deg);
  }
  100% {
    transform: translateX(0) rotate(1440deg);
  }
}

@keyframes spin {
  from {
    transform: translate(-50%, 0) rotate(0deg);
  }
  to {
    transform: translate(-50%, 0) rotate(360deg);
  }
}

/*============================================================================
  COMPONENT-SPECIFIC STYLES
============================================================================*/
/* Subtle Color Link Styles */
.color-link-light {
  position: relative;
  text-decoration: underline;
  text-underline-offset: 2px;
  text-decoration-thickness: 1px;
  transition: color 1000ms;
  cursor: pointer;
  animation: colorCycleLight 15s infinite linear;
}

.dark .color-link-light {
  animation: colorCycleLightDark 15s infinite linear;
}

/* Shuffle Button Styles */
.shuffle-button-inner:hover {
  border: 2px solid transparent;
  background-color: hsl(240 10% 20%);
  background: linear-gradient(hsl(240 10% 20%), hsl(240 10% 20%)) padding-box,
              conic-gradient(
                from var(--angle),
                #00ffcc,
                #ff00ff,
                #9933ff,
                #00ffcc,
                #ff00ff,
                #9933ff,
                #00ffcc
              ) border-box;
  /* 
  Alternative with more control over repetition:
  background: linear-gradient(hsl(240 10% 20%), hsl(240 10% 20%)) padding-box,
              repeating-conic-gradient(
                from var(--angle),
                #00ffcc 0%,
                #ff00ff 15%,
                #9933ff 30%,
                #00ffcc 45%
              ) border-box;
  
  Animation options:
  - Change duration: rotate 2s linear infinite (faster) or rotate 8s linear infinite (slower)
  - Change timing: rotate 4s ease infinite (smooth) or rotate 4s ease-in-out infinite (accelerate/decelerate)
  - Change direction: rotate 4s linear infinite reverse (opposite direction)
  */
  animation: rotate 4s linear infinite;
}

.dark .shuffle-button-inner:hover {
  background-color: hsl(0deg 0% 12%);
  background: linear-gradient(hsl(0deg 0% 12%), hsl(0deg 0% 12%)) padding-box,
              conic-gradient(
                from var(--angle),
                #00ffcc,
                #ff00ff,
                #9933ff,
                #00ffcc,
                #ff00ff,
                #9933ff,
                #00ffcc,
                #ff00ff,
                #9933ff,
                #00ffcc
              ) border-box;
  animation: rotate 4s linear infinite;
}

.shuffle-icon-spinning {
  animation: spin 1s linear infinite;
}

.shuffle-icon-container {
  transition: transform 0.5s ease-out;
}

.shuffle-button-inner:hover .shuffle-icon-container {
  animation: spin 1s linear infinite;
}

.shuffle-button-inner:hover .shuffle-icon-container svg {
  color: white;
}

.shuffle-button-inner:hover .shuffle-text {
  color: white;
}

/* Gradient HR style */
.gradient-hr {
  background: linear-gradient(to right, #ff00ff, #9933ff 42%, #9933ff 60%, #00ffcc);
}